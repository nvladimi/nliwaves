function clps_history
%
%   clps_history
%
%   Post-processing of text data: connecting collapses in time. 
%   Input: series of text files containg coordinates of bumps, h,
%   critial radii rN and rH, and second laplacian(h) at the top.
%   Input files are generated by C code nlspost.x.


  format compact;

  %-- parameters --

  fbase = 'eps1e-2_4096_zoom_rad/eps1e-2_4096.rad.'

  fname_out = 'eps1e-2_4096_zoom.bumps.txt'

  nfiles  = 1121;
  nbumps  = 4000;
  t0      = 10.7;
  dt      = (11.4-10.7)/1120;

  drrmax = 0.01^2; 

  %-- initialization --

  nvars   = 8;

  all_bumps = zeros(nvars, 2*nfiles, nbumps); 
  DB        = zeros(nbumps);
  mbmax     = 0;

  %-----------------------------------------------
  % main cycle
  %-----------------------------------------------

  for nf = 1:nfiles

    fname = [fbase, num2str(nf,'%04d'), '.txt'];

    tmp = importdata(fname);

    current_bumps = tmp';

    nt = t0 + (nf-1)*dt;

    current_bumps(1,:) = nt;

    %-- process all current bumps --

    for nb = 1:length(current_bumps)

 
      %-- match a new bump to all old bumps --

      match_found = 0;

      for mb = 1:mbmax

        mrecords = DB(mb);

	%-- compare only to bumps active in the previous file --

        %mt = all_bumps(1, mrecords, mb);
        %if fix((nt - mt)/dt) ~= 1
	%  continue
        %end


	%-- find difference in the position --

        dx = all_bumps(2, mrecords, mb) - current_bumps(2, nb);
        dy = all_bumps(3, mrecords, mb) - current_bumps(3, nb);

        drr = dx*dx + dy*dy;


        %-- if difference is small, record the bump --

        if ( drr < drrmax ) 
   
          mrecords = mrecords + 1;

          DB(mb) = mrecords;

          all_bumps(:, mrecords, mb) = current_bumps(:, nb);

          match_found = 1;
	      
          continue;

        end

      end

     %-- if no match found reate a new record --


     if match_found == 0

        mbmax = mbmax+1;

        DB(mbmax) = 1;

        all_bumps(:, 1, mbmax) = current_bumps(:, nb);

      end

    end


  end

  %-----------------------------------------------
  % output
  %-----------------------------------------------

  fid = fopen(fname_out, 'wt');

  fprintf(fid, ... 
    '#_1.t-tmax  2.t  3.x  4.y  5.h  6.rN  7.rH  8.delsq  9.delsq_blurred\n\n');
 


  for mb = 1:mbmax

    nmax=DB(mb);

    if nmax < 10 
      continue;
    end

    [h, n] = max(all_bumps(4,:,mb));
    tmax = all_bumps(1,n,mb);
    hmax = all_bumps(4,n,mb);

    fprintf(fid, ... 
       '# output = %4d :  hmax = %8.4f at tmax = %8.4f ( n = %4d )\n', ...
        mb-1, hmax, tmax, fix((tmax-t0)/dt)+1);

    fprintf(fid, 'NaN NaN NaN   NaN NaN NaN   NaN NaN NaN\n\n');


    for n=1:nmax
      
      fprintf(fid, ... 
        '%8.4f  %8.4f  %8.4f  %8.4f  %8.4f  %8.4f  %8.4f  %12.6e  %12.6e\n', ...
        all_bumps(1,n,mb)-tmax, ...   
        all_bumps(:,n,mb));

    end

    fprintf(fid, '\n\n');
 
  end

  fclose(fid);

end



%------------------------------------------

